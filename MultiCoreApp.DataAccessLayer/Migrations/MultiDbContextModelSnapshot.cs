// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultiCoreApp.DataAccessLayer;

#nullable disable

namespace MultiCoreApp.DataAccessLayer.Migrations
{
    [DbContext(typeof(MultiDbContext))]
    partial class MultiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MultiCoreApp.Core.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e9489a7d-d9e2-46c0-afbf-5f06f1316dfd"),
                            IsDeleted = false,
                            Name = "Kalemler"
                        },
                        new
                        {
                            Id = new Guid("90206461-51c0-4edb-b3f9-c868c788f380"),
                            IsDeleted = false,
                            Name = "Defterler"
                        });
                });

            modelBuilder.Entity("MultiCoreApp.Core.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblCustomers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e9489a7d-d9e2-46c0-afbf-5f06f1316dfd"),
                            Address = "Aydinli mah. İstanbul",
                            City = "İstanbul",
                            Email = "burcu@gmail.com",
                            IsDeleted = false,
                            Name = "Burcu BALCI",
                            Phone = "02456546"
                        },
                        new
                        {
                            Id = new Guid("90206461-51c0-4edb-b3f9-c868c788f380"),
                            Address = "Aydinli mah. İstanbul",
                            City = "İstanbul",
                            Email = "ozan@gmail.com",
                            IsDeleted = false,
                            Name = "Ozan BALCI",
                            Phone = "0165454"
                        });
                });

            modelBuilder.Entity("MultiCoreApp.Core.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("tblProducts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e0b06e03-5c5d-4d30-85bd-0f009aaf063d"),
                            CategoryId = new Guid("e9489a7d-d9e2-46c0-afbf-5f06f1316dfd"),
                            IsDeleted = false,
                            Name = "Dolma Kalem",
                            Price = 122.53m,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("364eca26-7d5c-46e7-99cd-08d6bde9e9a0"),
                            CategoryId = new Guid("e9489a7d-d9e2-46c0-afbf-5f06f1316dfd"),
                            IsDeleted = false,
                            Name = "Tükenmez Kalem",
                            Price = 18.06m,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("a351e374-cc6f-404c-bbb4-6f927139fd88"),
                            CategoryId = new Guid("e9489a7d-d9e2-46c0-afbf-5f06f1316dfd"),
                            IsDeleted = false,
                            Name = "Kursun Kalem",
                            Price = 62.19m,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("03c93562-2f90-44d8-829a-3c7e07c8badd"),
                            CategoryId = new Guid("90206461-51c0-4edb-b3f9-c868c788f380"),
                            IsDeleted = false,
                            Name = "Çizgili Defter",
                            Price = 22.53m,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("4688f2bf-95b9-4268-8948-bfea09532ec4"),
                            CategoryId = new Guid("90206461-51c0-4edb-b3f9-c868c788f380"),
                            IsDeleted = false,
                            Name = "Karali Defter",
                            Price = 8.06m,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("c9c3498f-54f4-48f0-a23c-a9e3bceb6d79"),
                            CategoryId = new Guid("90206461-51c0-4edb-b3f9-c868c788f380"),
                            IsDeleted = false,
                            Name = "Dumduz Defter",
                            Price = 12.19m,
                            Stock = 100
                        });
                });

            modelBuilder.Entity("MultiCoreApp.Core.Models.Product", b =>
                {
                    b.HasOne("MultiCoreApp.Core.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MultiCoreApp.Core.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
